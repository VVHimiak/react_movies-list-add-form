{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleIsInvalid","descriptionIsInvalid","imgUrlIsInvalid","imdbIdIsInvalid","imdbUrlIsInvalid","handleChange","event","target","name","value","setState","createMovie","onSubmitHandler","preventDefault","newMovie","props","onAdd","this","onSubmit","classNames","invalid","type","id","placeholder","onChange","htmlFor","React","Component","App","moviesFromServer","addMovie","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a721ca5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  titleIsInvalid: boolean,\n  descriptionIsInvalid: boolean,\n  imgUrlIsInvalid: boolean,\n  imdbIdIsInvalid: boolean,\n  imdbUrlIsInvalid: boolean,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleIsInvalid: false,\n    descriptionIsInvalid: false,\n    imgUrlIsInvalid: false,\n    imdbIdIsInvalid: false,\n    imdbUrlIsInvalid: false,\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n    // this.setState({[name]: value}) - doesn't work\n\n    if (name === 'title') {\n      this.setState({\n        titleIsInvalid: false,\n        title: value,\n      });\n    } else if (name === 'description') {\n      this.setState({\n        description: value,\n        descriptionIsInvalid: false,\n      });\n    } else if (name === 'imgUrl') {\n      this.setState({\n        imgUrl: value,\n        imgUrlIsInvalid: false,\n      });\n    } else if (name === 'imdbUrl') {\n      this.setState({\n        imdbUrl: value,\n        imdbUrlIsInvalid: false,\n      });\n    } else if (name === 'imdbId') {\n      this.setState({\n        imdbId: value,\n        imdbIdIsInvalid: false,\n      });\n    }\n  };\n\n  createMovie = () => {\n    return ({\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    });\n  };\n\n  onSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (\n      title\n      && description\n      && imgUrl\n      && imdbUrl\n      && imdbId) {\n      const newMovie = this.createMovie();\n\n      this.props.onAdd(newMovie);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        titleIsInvalid: false,\n        descriptionIsInvalid: false,\n        imgUrlIsInvalid: false,\n        imdbIdIsInvalid: false,\n        imdbUrlIsInvalid: false,\n      });\n    }\n\n    if (!title) {\n      this.setState({\n        titleIsInvalid: true,\n      });\n    }\n\n    if (!description) {\n      this.setState({\n        descriptionIsInvalid: true,\n      });\n    }\n\n    if (!imgUrl) {\n      this.setState({\n        imgUrlIsInvalid: true,\n      });\n    }\n\n    if (!imdbId) {\n      this.setState({\n        imdbIdIsInvalid: true,\n      });\n    }\n\n    if (!imdbUrl) {\n      this.setState({\n        imdbUrlIsInvalid: true,\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleIsInvalid,\n      descriptionIsInvalid,\n      imgUrlIsInvalid,\n      imdbIdIsInvalid,\n      imdbUrlIsInvalid,\n    } = this.state;\n\n    return (\n      <form className=\"row new-movie-form\" onSubmit={this.onSubmitHandler}>\n        <h3 className=\"text-center mb-3\">Add a movie Form</h3>\n        <div\n          className={\n            classNames(\n              'form-floating mb-3 new-movie-form__input-container',\n              {\n                invalid: titleIsInvalid,\n              },\n            )\n          }\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"floatingTitle\"\n            placeholder=\"Title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"floatingTitle\">Title</label>\n        </div>\n        <div\n          className={\n            classNames(\n              'form-floating mb-3 new-movie-form__input-container',\n              {\n                invalid: descriptionIsInvalid,\n              },\n            )\n          }\n        >\n          <textarea\n            className=\"form-control\"\n            id=\"floatingDescription\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"floatingDescription\">Description</label>\n        </div>\n        <div\n          className={\n            classNames(\n              'form-floating mb-3 new-movie-form__input-container',\n              {\n                invalid: imgUrlIsInvalid,\n              },\n            )\n          }\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"ImgUrl\"\n            id=\"floatingImgUrl\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"floatingImgUrl\">ImgUrl</label>\n        </div>\n        <div\n          className={\n            classNames(\n              'form-floating mb-3 new-movie-form__input-container',\n              {\n                invalid: imdbUrlIsInvalid,\n              },\n            )\n          }\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"floatingImdbUrl\"\n            placeholder=\"ImdbUrl\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"floatingImdbUrl\">ImdbUrl</label>\n        </div>\n        <div\n          className={classNames(\n            'form-floating mb-3 new-movie-form__input-container',\n            {\n              invalid: imdbIdIsInvalid,\n            },\n          )}\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"floatingImdbId\"\n            placeholder=\"ImdbId\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"floatingImdbId\" className=\"pe-2\">ImdbId</label>\n        </div>\n        <div className=\"d-flex\">\n          <button type=\"submit\" className=\"btn btn-primary mt-3 w-50 align-self-center\">Add!</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((currentState) => {\n      return ({\n        movies: [...currentState.movies, movie],\n      });\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}